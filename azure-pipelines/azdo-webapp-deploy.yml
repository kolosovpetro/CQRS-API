trigger: none
pr: none

variables:
  - name: buildPlatform
    value: 'Any CPU'
  - name: buildConfiguration
    value: 'Release'
  - name: projectPath
    value: './MoviesAPI.Core/MoviesAPI.Core.csproj'
#  - name: IISSiteName
#    value: 'moviesapi'
#  - name: IISSitePhysicalPath
#    value: '%SystemDrive%\inetpub\wwwroot\$(IISSiteName)'

stages:
  - stage: 'Build_Test'
    jobs:
      - job: "Build"
        displayName: 'Build Test & Drop artifacts'
        pool:
          vmImage: 'ubuntu-latest'

        steps:
          - checkout: self
            fetchDepth: 0

          - task: gitversion/setup@0
            displayName: 'GitVersion Setup'
            inputs:
              versionSpec: '5.9.x'

          - task: gitversion/execute@0
            displayName: 'GitVersion Execute'

          - script: |
              echo "Upcoming semantic version: $(SemVer)"
            displayName: 'Print semantic version'

          - bash: echo $Action$BuildVersion
            displayName: 'Set Build Version'
            env:
              Action: '##vso[build.updatebuildnumber]'
              BuildVersion: $(GitVersion.SemVer)

          - task: UseDotNet@2
            displayName: 'Install .NET 6.x SDK'
            inputs:
              packageType: sdk
              version: 6.x

          - task: DotNetCoreCLI@2
            displayName: 'Dotnet Restore'
            inputs:
              command: 'restore'
              arguments: '--verbosity minimal'

          - task: DotNetCoreCLI@2
            displayName: 'Dotnet build $(buildConfiguration)'
            inputs:
              command: 'build'
              arguments: '-p:Version=$(SemVer) --configuration $(buildConfiguration) --no-restore'

          - task: DotNetCoreCLI@2
            displayName: 'Dotnet Publish'
            inputs:
              command: 'publish'
              publishWebProjects: false
              projects: '$(projectPath)'
              arguments: '-p:Version=$(SemVer) -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/$(buildConfiguration) --no-build'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifacts'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'

  - stage: 'dev'
    displayName: 'Deploy Movies dev'
    dependsOn: Build_Test
    condition: succeeded('Build_Test')
    jobs:
      - deployment: Deploy_Movies_Dev
        displayName: 'Deploy Movies dev'
        variables:
          - group: MOVIES_SETTINGS
        environment:
          name: dev
          resourceType: VirtualMachine
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop

                - task: IISWebAppManagementOnMachineGroup@0
                  inputs:
                    EnableIIS: true
                    IISDeploymentType: 'IISWebsite'
                    ActionIISWebsite: 'CreateOrUpdateWebsite'
                    WebsiteName: '$(IISSiteName)-$(Environment.Name)'
                    WebsitePhysicalPath: '$(IISSitePhysicalPath)'
                    AddBinding: true
                    Bindings: |
                      {
                          bindings: [
                            {
                              "protocol":"http",
                              "ipAddress":"*",
                              "hostname":"$(HostName)",
                              "port":"80",
                              "sslThumbprint":"",
                              "sniFlag":false
                            },
                            {
                              "protocol":"https",
                              "ipAddress":"*",
                              "hostname":"$(HostName)",
                              "port":"443",
                              "sslThumbprint":"$(CertThumbprint)",
                              "sniFlag":false
                            }
                          ]
                      }
                    CreateOrUpdateAppPoolForWebsite: true
                    ConfigureAuthenticationForWebsite: true
                    AppPoolNameForWebsite: '$(IISSiteName)-$(Environment.Name)'
                    DotNetVersionForWebsite: 'No Managed Code'
                    PipeLineModeForWebsite: 'Integrated'
                    AppPoolIdentityForWebsite: 'ApplicationPoolIdentity'
                    AnonymousAuthenticationForWebsite: true
                    BasicAuthenticationForWebsite: false
                    WindowsAuthenticationForWebsite: false

                - task: IISWebAppDeploymentOnMachineGroup@0
                  displayName: 'IIS Web App Deploy'
                  inputs:
                    WebSiteName: '$(IISSiteName)-$(Environment.Name)'
                    TakeAppOfflineFlag: true
                    Package: '$(Pipeline.Workspace)/drop/$(BuildConfiguration)/MoviesAPI.Core.zip'
                    JSONFiles: '**/appsettings.json'